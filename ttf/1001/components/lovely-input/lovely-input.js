/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ({

/***/ 0:
/***/ function(module, exports, __webpack_require__) {

	var __weex_template__ = __webpack_require__(76)
	var __weex_style__ = __webpack_require__(77)
	var __weex_script__ = __webpack_require__(78)
	
	__weex_define__('@weex-component/b48123fb21bc8d3ff6a352e62f0e8196', [], function(__weex_require__, __weex_exports__, __weex_module__) {
	
	    __weex_script__(__weex_module__, __weex_exports__, __weex_require__)
	    if (__weex_exports__.__esModule && __weex_exports__.default) {
	      __weex_module__.exports = __weex_exports__.default
	    }
	
	    __weex_module__.exports.template = __weex_template__
	
	    __weex_module__.exports.style = __weex_style__
	
	})
	
	__weex_bootstrap__('@weex-component/b48123fb21bc8d3ff6a352e62f0e8196',undefined,undefined)

/***/ },

/***/ 76:
/***/ function(module, exports) {

	module.exports = {
	  "type": "div",
	  "classList": [
	    "wrapper"
	  ],
	  "children": [
	    {
	      "type": "input",
	      "classList": [
	        "lovely-input"
	      ],
	      "style": {
	        "width": function () {return this.width},
	        "fontSize": function () {return this.fontSize}
	      },
	      "attr": {
	        "type": function () {return this.type},
	        "placeholder": function () {return this.placeholder},
	        "value": function () {return this.value}
	      },
	      "events": {
	        "input": "oninput"
	      }
	    },
	    {
	      "type": "text",
	      "classList": [
	        "lovely-input-clean"
	      ],
	      "style": {
	        "visibility": function () {return this.visibility}
	      },
	      "events": {
	        "click": "clean"
	      },
	      "attr": {
	        "value": "Ã—"
	      }
	    }
	  ]
	}

/***/ },

/***/ 77:
/***/ function(module, exports) {

	module.exports = {
	  "wrapper": {
	    "position": "relative",
	    "height": 60
	  },
	  "lovely-input": {
	    "height": 60,
	    "color": "#333333"
	  },
	  "lovely-input-clean": {
	    "position": "absolute",
	    "right": 10,
	    "bottom": 10,
	    "width": 40,
	    "height": 40,
	    "fontSize": 30,
	    "lineHeight": 40,
	    "color": "#ffffff",
	    "textAlign": "center",
	    "borderRadius": 20,
	    "backgroundColor": "#cccccc"
	  }
	}

/***/ },

/***/ 78:
/***/ function(module, exports) {

	module.exports = function(module, exports, __weex_require__){'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = {
	    data: function data() {
	        return {
	            width: '',
	            style: '',
	            type: 'text',
	            placeholder: '',
	            value: '',
	            visibility: 'hidden',
	            fontSize: 32
	        };
	    },
	    created: function created() {},
	
	    methods: {
	        oninput: function oninput(e) {
	            this.value = e.value;
	            if (this.value) {
	                this.showCleanBtn();
	            } else {
	                this.hideCleanBtn();
	            }
	        },
	        showCleanBtn: function showCleanBtn() {
	            this.visibility = 'visible';
	        },
	        hideCleanBtn: function hideCleanBtn() {
	            this.visibility = 'hidden';
	        },
	        clean: function clean() {
	            this.value = '';
	            this.hideCleanBtn();
	        }
	    }
	};}
	/* generated by weex-loader */


/***/ }

/******/ });
//# sourceMappingURL=data:application/json;charset=utf-8;base64,